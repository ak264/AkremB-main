---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import BlogYearHeader from '../../components/BlogYearHeader.astro';
import { formatDate, filterDraftContent } from '../../utils';

// Get all blog posts
const allPosts = await getCollection('blog');

// Filter out drafts in production
const filteredPosts = filterDraftContent(allPosts);

// Sort by date (newest first)
const sortedPosts = filteredPosts.sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());

// Group posts by year
const postsByYear = sortedPosts.reduce((acc, post) => {
  const year = new Date(post.data.pubDate).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

// Convert to array and sort years in descending order
const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));

// Status color mapping
const statusColors = {
  'building': 'bg-blue-600 dark:bg-blue-500',
  'published': 'bg-green-600 dark:bg-green-500',
  'draft': 'bg-amber-600 dark:bg-amber-500'
};
---

<BaseLayout title="Blog" description="All blog posts">
  <div class="container max-w-3xl mx-auto px-4 py-12 blog-index">
    <h1 class="text-4xl font-bold mb-12 text-zinc-100">Blog</h1>
    
    {years.map((year) => (
      <div class="mb-16">
        <BlogYearHeader year={year} />
        
        <div class="space-y-6">
          {postsByYear[year].map((post) => {
            const formattedDate = formatDate(post.data.pubDate);
            const status = post.data.status || 'published';
            const statusColor = statusColors[status];
            
            return (
              <div class="border-b border-zinc-800 pb-6">
                <div class="flex justify-between items-start">
                  <div class="text-zinc-500 text-sm">{formattedDate}</div>
                  
                  {post.data.status && (
                    <span class={`text-xs px-2 py-0.5 rounded-full text-white ${statusColor}`}>
                      {status.charAt(0).toUpperCase() + status.slice(1)}
                    </span>
                  )}
                </div>
                
                <h2 class="text-2xl font-bold mt-2 text-zinc-900 dark:text-zinc-100 blog-post-title">
                  <a href={`/blog/${post.slug}`} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                    {post.data.title}
                  </a>
                </h2>
                
                <p class="text-zinc-600 dark:text-zinc-400 mt-2 line-clamp-2 blog-post-desc">
                  {post.data.description}
                </p>
              </div>
            );
          })}
        </div>
      </div>
    ))}
  </div>
</BaseLayout>

<style>
  /* Dark mode styling compatible with theme toggle */
  :global(.dark) .blog-index {
    @apply bg-zinc-900 text-white;
  }
  
  :global(.dark) .blog-post-title {
    @apply text-zinc-100;
  }
  
  :global(.dark) .blog-post-desc {
    @apply text-zinc-400;
  }
</style>
