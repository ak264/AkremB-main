---
import { slugify } from '../utils';
import FormattedDate from './FormattedDate.astro';
import type { CollectionEntry } from 'astro:content';

type BlogPost = CollectionEntry<'blog'>;
const { post }: Record<string, any> | { post: BlogPost } = Astro.props
---
<div class='post-card flex flex-col sm:flex-row gap-2 sm:items-center border-b py-4 my-2 capitalize dark:border-b-zinc-700 hover:bg-zinc-50 dark:hover:bg-zinc-800/30 rounded-lg px-3 transition-colors duration-200' data-tags={(post.data.tags || []).join(',')}>
  <div class='text-zinc-700 text-sm w-24 dark:text-zinc-300 shrink-0'>
    <FormattedDate date={post.data.pubDate} />
  </div>
  <h3 class='font-medium grow text-lg'>
    <a href={`/${post.slug}/`} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200">
      {post.data.title}
    </a>
  </h3>
  <div class='flex gap-2 shrink-0 items-center min-w-[60px]'>
    {
      (post.data.tags && post.data.tags.length > 0) && (
        <a
          href={`/posts/?tag=${encodeURIComponent(post.data.tags[0])}`}
          class='tag border border-zinc-300 dark:border-zinc-700 rounded-2xl
          text-sm text-zinc-700 dark:text-zinc-300 no-underline px-2 py-0.5 cursor-pointer
          transition-all duration-700 hover:border-zinc-700 dark:hover:border-zinc-300'
          data-value={post.data.tags[0]}
        >
          {post.data.tags[0]}
        </a>
      )
    }
    {
      (post.data.tags && post.data.tags.length > 1) && (
        <span
          class='tag-indicator border border-zinc-200 dark:border-zinc-700 rounded-2xl
          text-xs text-zinc-500 dark:text-zinc-400 px-2 py-0.5 cursor-pointer select-none'
          title={post.data.tags.slice(1).join(', ')}
        >
          +{post.data.tags.length - 1}
        </span>
      )
    }
  </div>
</div>

<script>
  // Initialize tag filtering
  document.addEventListener('DOMContentLoaded', () => {
    // Remove old tag button click logic since tags are now anchor links
  });
  
  // Listen for filter reset events
  document.addEventListener('filters:reset', () => {
    // Reset any active state on tag buttons if needed
    const activeTags = document.querySelectorAll('.post-card .tag.active');
    activeTags.forEach(tag => tag.classList.remove('active'));
  });
</script>
